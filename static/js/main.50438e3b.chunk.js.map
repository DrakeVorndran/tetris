{"version":3,"sources":["actions/index.js","utils/index.js","reducers/game-reducer.js","reducers/index.js","components/grid-square.js","components/next-block.js","components/grid-board.js","components/score-board.js","components/controls.js","components/message-popup.js","App.js","serviceWorker.js","index.js"],"names":["moveRight","type","moveLeft","rotate","moveDown","pause","resume","restart","gridDefault","array","row","push","col","shapes","randomShape","min","max","length","Math","floor","random","defaultState","grid","shape","rotation","x","y","nextShape","isRunning","score","speed","gameOver","canMoveTo","currentShape","proposedX","proposedY","possibleRow","undefined","gameReducer","state","arguments","action","newRotation","nextRotation","Object","objectSpread","maybeY","obj","blockOffGrid","block","newGrid","toConsumableArray","addBlockToGrid","newState","completedRows","indexOf","splice","unshift","Array","fill","checkRows","reducers","combineReducers","game","GridSquare","classes","concat","this","props","color","react_default","a","createElement","className","Component","NextBlock","map","rowArray","square","grid_square","key","makeGrid","connect","GridBoard","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","lastUpdateTime","progressTime","window","requestAnimationFrame","update","bind","time","deltaTime","_this$props","blockColor","blockX","blockY","k","ScoreBoard","onClick","e","Controls","move","keyCode","document","addEventListener","_this2","console","log","MessagePopup","message","isHidden","store","createStore","App","es","grid_board","next_block","score_board","controls","message_popup","Boolean","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"mRASaA,EAAY,WACvB,MAAO,CAAEC,KAPe,eAUbC,EAAW,WACtB,MAAO,CAAED,KAZe,cAebE,EAAS,WACpB,MAAO,CAAEF,KAde,WAiBbG,EAAW,WACtB,MAAO,CAAEH,KAjBe,cAoBbI,EAAQ,WACnB,MAAO,CAAEJ,KA1Be,UA6BbK,EAAS,WACpB,MAAO,CAAEL,KA7Be,WAgCbM,EAAU,WACrB,MAAO,CAAEN,KA3Be,oBCHbO,EAAc,WAIzB,IAHA,IAEMC,EAAQ,GACLC,EAAM,EAAGA,EAHL,GAGiBA,IAAQ,CACpCD,EAAME,KAAK,IACX,IAAK,IAAIC,EAAM,EAAGA,EAJP,GAImBA,IAC5BH,EAAMC,GAAKC,KAAK,GAGpB,OAAOF,GAGII,EAAS,CAEpB,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,KAGT,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,IAER,CAAC,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,KAGT,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,IAER,CAAC,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,IAER,CAAC,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,IAER,CAAC,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,KAGT,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,IAER,CAAC,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,IAER,CAAC,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,IAER,CAAC,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,KAGT,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,IAER,CAAC,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,IAER,CAAC,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,IAER,CAAC,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,KAGT,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,IAER,CAAC,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,KAGT,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,IAER,CAAC,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CA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","file":"static/js/main.50438e3b.chunk.js","sourcesContent":["export const PAUSE      = \"PAUSE\"       // Pause the game\nexport const RESUME     = \"RESUME\"      // Resume a paused game\nexport const MOVE_LEFT  = \"MOVE_LEFT\"   // Move piece left\nexport const MOVE_RIGHT = \"MOVE_RIGHT\"  // Move piece right\nexport const ROTATE     = \"ROTATE\"      // Rotate piece\nexport const MOVE_DOWN  = \"MOVE_DOWN\"   // Move piece down\nexport const GAME_OVER  = \"GAME_OVER\"   // The game is over\nexport const RESTART    = \"RESTART\"     // Restart Game\n\nexport const moveRight = () => {\n  return { type: MOVE_RIGHT }\n}\n\nexport const moveLeft = () => {\n  return { type: MOVE_LEFT }\n}\n\nexport const rotate = () => {\n  return { type: ROTATE }\n}\n\nexport const moveDown = () => {\n  return { type: MOVE_DOWN }\n}\n\nexport const pause = () => {\n  return { type: PAUSE }\n}\n\nexport const resume = () => {\n  return { type: RESUME }\n}\n\nexport const restart = () => {\n  return { type: RESTART }\n}","export const random = (min, max) => {\n  return Math.floor(Math.random() * (max - min + 1)) + min\n}\n\nexport const gridDefault = () => {\n  const rows = 18\n  const cols = 10\n  const array = []\n  for (let row = 0; row < rows; row++ ) {\n    array.push([])\n    for (let col = 0; col < cols; col++ ) {\n      array[row].push(0)\n    }\n  }\n  return array\n}\n\nexport const shapes = [\n  // none\n  [[[0,0,0,0],\n    [0,0,0,0],\n    [0,0,0,0],\n    [0,0,0,0]]],\n\n  // I\n  [[[0,0,0,0],\n    [1,1,1,1],\n    [0,0,0,0],\n    [0,0,0,0]],\n\n   [[0,1,0,0],\n    [0,1,0,0],\n    [0,1,0,0],\n    [0,1,0,0]]],\n\n  // T\n  [[[0,0,0,0],\n    [1,1,1,0],\n    [0,1,0,0],\n    [0,0,0,0]],\n\n   [[0,1,0,0],\n    [1,1,0,0],\n    [0,1,0,0],\n    [0,0,0,0]],\n\n   [[0,1,0,0],\n    [1,1,1,0],\n    [0,0,0,0],\n    [0,0,0,0]],\n\n   [[0,1,0,0],\n    [0,1,1,0],\n    [0,1,0,0],\n    [0,0,0,0]]],\n\n  // L\n  [[[0,0,0,0],\n    [1,1,1,0],\n    [1,0,0,0],\n    [0,0,0,0]],\n\n   [[1,1,0,0],\n    [0,1,0,0],\n    [0,1,0,0],\n    [0,0,0,0]],\n\n   [[0,0,1,0],\n    [1,1,1,0],\n    [0,0,0,0],\n    [0,0,0,0]],\n\n   [[0,1,0,0],\n    [0,1,0,0],\n    [0,1,1,0],\n    [0,0,0,0]]],\n\n  // J\n  [[[1,0,0,0],\n    [1,1,1,0],\n    [0,0,0,0],\n    [0,0,0,0]],\n\n   [[0,1,1,0],\n    [0,1,0,0],\n    [0,1,0,0],\n    [0,0,0,0]],\n\n   [[0,0,0,0],\n    [1,1,1,0],\n    [0,0,1,0],\n    [0,0,0,0]],\n\n   [[0,1,0,0],\n    [0,1,0,0],\n    [1,1,0,0],\n    [0,0,0,0]]],\n\n  // Z\n  [[[0,0,0,0],\n    [1,1,0,0],\n    [0,1,1,0],\n    [0,0,0,0]],\n\n   [[0,0,1,0],\n    [0,1,1,0],\n    [0,1,0,0],\n    [0,0,0,0]]],\n\n  // S\n  [[[0,0,0,0],\n    [0,1,1,0],\n    [1,1,0,0],\n    [0,0,0,0]],\n\n   [[0,1,0,0],\n    [0,1,1,0],\n    [0,0,1,0],\n    [0,0,0,0]]],\n\n  // O\n  [[[0,1,1,0],\n    [0,1,1,0],\n    [0,0,0,0],\n    [0,0,0,0]]]\n]\n\nexport const randomShape = () => {\n  return random(1, shapes.length - 1)\n}\n\nexport const defaultState = () => {\n  return {\n    // Create an empty grid\n    grid: gridDefault(),\n    // Get a new random shape\n    shape: randomShape(),\n    // set rotation of the shape to 0\n    rotation: 0,\n    // set the 'x' position of the shape to 5 and y to -4, which puts the shape in the center of the grid, above the top\n    x: 5,\n    y: -4,\n    // set the index of the next shape to a new random shape\n    nextShape: randomShape(),\n    // Tell the game that it's currently running\n    isRunning: true,\n    // Set the score to 0\n    score: 0,\n    // Set the default speed\n    speed: 1000,\n    // Game isn't over yet\n    gameOver: false\n  }\n}\n\nexport const nextRotation = (shape, rotation) => {\n  return (rotation + 1) % shapes[shape].length\n}\n\nexport const canMoveTo = (shape, grid, x, y, rotation) => {\n  const currentShape = shapes[shape][rotation]\n  // Loop through all rows and cols of the **shape**\n  for (let row = 0; row < currentShape.length; row++) {\n      for (let col = 0; col < currentShape[row].length; col++) {\n          // Look for a 1 here\n          if (currentShape[row][col] !== 0) {\n              // x offset on grid\n              const proposedX = col + x\n              // y offset on grid\n              const proposedY = row + y\n              if (proposedY < 0) {\n                  continue\n              }\n              // Get the row on the grid\n              const possibleRow = grid[proposedY]\n              // Check row exists\n              if (possibleRow) {\n                  // Check if this column in the row is undefined, if it's off the edges, 0, and empty\n                  if (possibleRow[proposedX] === undefined || possibleRow[proposedX] !== 0) {\n                      // undefined or not 0 and it's occupied we can't move here.\n                      return false\n                  }\n              } else {\n                  return false\n              }\n          }\n      }\n  }\n  return true\n}\n\nexport const addBlockToGrid = (shape, grid, x, y, rotation) => {\n  // At this point the game is not over\n  let blockOffGrid = false\n  const block = shapes[shape][rotation]\n  const newGrid = [ ...grid ]\n  for (let row = 0; row < block.length; row++) {\n    for (let col = 0; col < block[row].length; col++) {\n      if (block[row][col]) {\n        const yIndex = row + y\n        // If the yIndex is less than 0 part of the block\n        // is off the top of the screen and the game is over\n        if (yIndex < 0) {\n          blockOffGrid = true\n        } else {\n          newGrid[row + y][col + x] = shape\n        }\n      }\n    }\n  }\n  // Return both the newGrid and the gameOver bool                                                \n  return { grid: newGrid, gameOver: blockOffGrid }\n}\n\nexport const checkRows = (grid) => {\n  // Points increase for each row completed\n  // i.e. 40 points for completing one row, 100 points for two rows\n  const points = [0, 40, 100, 300, 1200]\n  let completedRows = 0\n  for (let row = 0; row < grid.length; row++) {\n    // No empty cells means it can't find a 0, so the row must be complete!\n    if (grid[row].indexOf(0) === -1) {\n      completedRows += 1\n      // Remove the row and add a new empty one at the top\n      grid.splice(row, 1)\n      grid.unshift(Array(10).fill(0))\n    }\n  }\n  return points[completedRows]\n}\n\n","import {\n  MOVE_RIGHT, MOVE_LEFT, MOVE_DOWN, ROTATE,\n  PAUSE, RESUME, RESTART, GAME_OVER\n} from '../actions'\nimport {\n  defaultState,\n  nextRotation,\n  canMoveTo,\n  addBlockToGrid,\n  checkRows,\n  randomShape,\n} from '../utils'\n\nconst gameReducer = (state = defaultState(), action) => {\n  const { shape, grid, x, y, rotation, nextShape, score, isRunning } = state\n\n\n  switch (action.type) {\n    case ROTATE:\n      const newRotation = nextRotation(shape, rotation)\n      if (canMoveTo(shape, grid, x, y, newRotation)) {\n        return { ...state, rotation: newRotation }\n      }\n      return state\n\n    case MOVE_RIGHT:\n      if (canMoveTo(shape, grid, x + 1, y, rotation)) {\n        return { ...state, x: x + 1 }\n      }\n      return state\n\n    case MOVE_LEFT:\n      if (canMoveTo(shape, grid, x - 1, y, rotation)) {\n        return { ...state, x: x - 1 }\n      }\n      return state\n\n    case MOVE_DOWN:\n      const maybeY = y + 1\n\n      // Check if the current block can move here\n      if (canMoveTo(shape, grid, x, maybeY, rotation)) {\n        // If so move down don't place the block\n        return { ...state, y: maybeY }\n      }\n\n      // If not place the block\n      // (this returns an object with a grid and gameover bool)\n      const obj = addBlockToGrid(shape, grid, x, y, rotation)\n      const newGrid = obj.grid\n      const gameOver = obj.gameOver\n\n      if (gameOver) {\n        // Game Over\n        const newState = { ...state }\n        newState.shape = 0\n        newState.grid = newGrid\n        return { ...state, gameOver: true }\n      }\n\n      // reset somethings to start a new shape/block\n      const newState = defaultState()\n      newState.grid = newGrid\n      newState.shape = nextShape\n      newState.score = score\n      newState.isRunning = isRunning\n\n      // TODO: Check and Set level\n      // Score increases decrease interval\n      newState.score = score + checkRows(newGrid)\n\n      return newState\n\n    case RESUME:\n      return { ...state, isRunning: true }\n\n\n    case PAUSE:\n      return { ...state, isRunning: false }\n\n\n    case GAME_OVER:\n\n      return state\n\n    case RESTART:\n      return defaultState()\n      \n    default:\n      return state\n  }\n}\n\nexport default gameReducer","import { combineReducers } from 'redux'\nimport gameReducer from './game-reducer'\n\nconst reducers = combineReducers({ game: gameReducer })\n\nexport default reducers","import React, { Component } from 'react'\n\nclass GridSquare extends Component{\n  render() {\n    const classes = `grid-square color-${this.props.color}`\n    return <div className={classes} />\n  }\n}\n\nexport default GridSquare","import React, { Component } from 'react'\nimport GridSquare from './grid-square'\nimport { connect } from 'react-redux'\n\nimport { shapes } from '../utils'\n\nclass NextBlock extends Component {\n\n  makeGrid() {\n    const { shape } = this.props\n    const block = shapes[shape][0]\n    const box = shapes[0][0]\n    return box.map((rowArray, row) => {\n      return rowArray.map((square, col) => {\n        const color = block[row][col] === 0 ? 0 : shape\n        return(<GridSquare key={`${row},${col}`} color={color} />)\n      })\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"next-block\">\n        {this.makeGrid()}\n      </div>\n    )\n  }\n}\n\n\nconst mapStateToProps = (state) => {\n  return {\n    shape: state.game.nextShape\n  }\n}\n\nexport default connect(mapStateToProps)(NextBlock)","import React, { Component } from 'react'\nimport GridSquare from './grid-square'\n\nimport { moveDown } from '../actions'\nimport { shapes } from '../utils'\n\nimport { connect } from 'react-redux'\n\nclass GridBoard extends Component {\n\n  constructor(props) {\n    super(props)\n\n    this.lastUpdateTime = 0\n    this.progressTime = 0\n  }\n\n  componentDidMount() {\n    window.requestAnimationFrame(this.update.bind(this))\n  }\n\n  update(time) {\n    // If the game is is running we want to request a callback at the next animation frame.\n    window.requestAnimationFrame(this.update.bind(this))\n    if (!this.props.isRunning) {\n      return\n    }\n  \n    // If lastUpdateTime not been set, set it to the current time.\n    if (!this.lastUpdateTime) {\n      this.lastUpdateTime = time\n    }\n  \n    // Calculate delta time and progress time\n    const deltaTime = time - this.lastUpdateTime\n    this.progressTime += deltaTime\n  \n    // If the progress time is greater than speed move the block down\n    if (this.progressTime > this.props.speed) {\n      this.props.moveDown()\n      this.progressTime = 0\n    }\n  \n    // set the last update time.\n    this.lastUpdateTime = time\n  }\n\n  makeGrid() {\n    const { grid, shape, rotation, x, y } = this.props\n    const block = shapes[shape][rotation]\n    const blockColor = shape\n\n    return grid.map((rowArray, row) => {\n      return rowArray.map((square, col) => {\n        const blockX = col - x\n        const blockY = row - y\n        let color = square\n        if (blockX >= 0 && blockX < block.length && blockY >= 0 && blockY < block.length) {\n          color = block[blockY][blockX] === 0 ? color : blockColor\n        }\n        const k = row * grid[0].length + col;\n        return ( <GridSquare\n              key={k}\n              square={square}\n              color={color}>{square}\n            </GridSquare> )\n      })\n    })\n\n\n\n\n    // for (let row = 0; row < 18; row++ ) {\n    //   grid.push([])\n    //   for (let col = 0; col < 10; col++ ) {\n    //     grid[row].push(<GridSquare key={`${col},${row}`} color=\"1\" />)\n    //   }\n    // }\n\n    // return grid\n  }\n\n  render() {\n    return (\n      <div className=\"grid-board\">\n        {this.makeGrid()}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    grid: state.game.grid,\n    shape: state.game.shape,\n    rotation: state.game.rotation,\n    x: state.game.x,\n    y: state.game.y,\n    speed: state.game.speed,\n    isRunning: state.game.isRunning\n  }\n}\n\nconst mapDispatchToProps = () => {\n  return{\n    moveDown\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps())(GridBoard)","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport { pause, resume, restart } from '../actions'\n\nclass ScoreBoard extends Component {\n\n  render() {\n    const { isRunning, score, resume, pause, restart, gameOver } = this.props\n    return (\n      <div className=\"score-board\">\n        <div>Score:{score}</div>\n        <div>Level: 1</div>\n\n        <button className=\"score-board-button\" onClick={(e) => {\n          if (gameOver) { return }\n          isRunning ? pause() : resume()\n        }}>{isRunning ? \"Pause\" : \"Resume\"}</button>\n\n        <button className=\"score-board-button\" onClick={(e) => {\n          restart()\n        }}>Restart</button>\n\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    score: state.game.score,\n    isRunning: state.game.isRunning,\n    gameOver: state.game.gameOver\n  }\n}\n\nconst mapDispatchToProps = () => {\n  return {\n    pause,\n    resume,\n    restart\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps())(ScoreBoard)","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport { moveDown, moveLeft, moveRight, rotate, } from '../actions'\n\n\nclass Controls extends Component {\n\n  move = (e) => {\n    const key = e.keyCode\n    if(key === 37){\n\n        this.props.moveLeft()\n    }\n    else if (key === 38){\n      this.props.rotate()\n    }\n    else if (key === 39){\n      this.props.moveRight()\n    }\n    else if (key === 40){\n      this.props.moveDown()\n    }\n  }\n\n  componentWillMount() {\n    document.addEventListener('keydown', this.move, false)\n  }\n\n\n  render() {\n    const { isRunning, gameOver } = this.props\n\n    \n\n    return (\n      <div className=\"controls\">\n        {/* left */}\n        <button className=\"control-button\" onClick={(e) => {\n          console.log(isRunning, gameOver)\n          if (!isRunning || gameOver) { return }\n          this.props.moveLeft()\n        }}>Left</button>\n\n        {/* right */}\n        <button className=\"control-button\" onClick={(e) => {\n          if (!isRunning || gameOver) { return }\n          this.props.moveRight()\n        }}>Right</button>\n\n        {/* rotate */}\n        <button className=\"control-button\" onClick={(e) => {\n          if (!isRunning || gameOver) { return }\n          this.props.rotate()\n        }}>Rotate</button>\n\n        {/* down */}\n        <button className=\"control-button\" onClick={(e) => {\n          if (!isRunning || gameOver) { return }\n          this.props.moveDown()\n        }}>Down</button>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    isRunning: state.game.isRunning,\n    gameOver: state.game.gameOver\n  }\n}\n\nconst mapDispatchToProps = () => {\n  return {\n    moveRight,\n    moveLeft,\n    moveDown,\n    rotate\n  }\n}\n\n// document.onkeydown = function (e) {\n//     e = e || window.event;\n//     // use e.keyCode\n//     move(e.keyCode);\n//     console.log(\"hi\")\n// };\n\n\n\n\nexport default connect(mapStateToProps, mapDispatchToProps())(Controls)","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nclass MessagePopup extends Component {\n  \n  render() {\n    const { gameOver, isRunning } = this.props\n    let message = ''\n    let isHidden = 'hidden'\n\n    if (gameOver) {\n      message = 'Game Over'\n      isHidden = ''\n    } else if (!isRunning) {\n      message = \"Paused\"\n      isHidden = ''\n    } else {\n      message = '???'\n    }\n    return (\n      <div className={`message-popup ${isHidden}`}>\n        <h1>{message}</h1>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    gameOver: state.game.gameOver,\n    isRunning: state.game.isRunning\n  }\n}\n\nconst mapDispatchToProps = () => {\n  return { }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps())(MessagePopup)","import React, { Component } from 'react';\nimport { createStore } from 'redux'\n\nimport { Provider } from 'react-redux'\n\nimport reducers from './reducers'\n\nimport NextBlock from './components/next-block'\nimport GridBoard from './components/grid-board'\nimport ScoreBoard from './components/score-board'\nimport Controls from './components/controls'\nimport MessagePopup from './components/message-popup'\n\nimport './App.css';\n\nconst store = createStore(reducers)\n\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store} >\n        <div className=\"App\">\n          <header className=\"App-header\">\n            <h1 className=\"App-title\">Tetris Redux</h1>\n          </header>\n          <GridBoard />\n          <NextBlock />\n          <ScoreBoard />\n          <Controls />\n          <MessagePopup />\n        </div>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}